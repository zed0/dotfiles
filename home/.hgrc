# example user config (see "hg help config" for more info)
[ui]
# name and email, e.g.
# username = Jane Doe <jdoe@example.com>
username = Ben Falconer <ben@falconers.me.uk>
merge = vimdiff
style = compact
commitsubrepos = false
ignore = /home/zed0/hg/ignore
interface = curses

[merge-tools]
vimdiff.executable = vimdiff
vimdiff.args = -f -d $output -M $local $base $other -c "wincmd J" -c "set modifiable" -c "set write"
vimdiff.premerge = keep

[extensions]
# uncomment these lines to enable some popular extensions
# (see "hg help extensions" for more info)
#
pager =
strip =
rebase =
histedit =
progress =
color =
purge =
shelve =
graphlog =
record =
hgext.crecord = /home/zed0/hg/crecord/crecord
hgext.extdiff =
remotebranches = /home/zed0/hg/remotebranches/hg_remotebranches.py

[pager]
pager = LESS='FRSXQ' less
quiet = True
attend = annotate,blame,log,shelve,diff,gdiff

[extdiff]
cmd.vimdiff =
opts.vimdiff = -c "cnoreabbrev q :qa!"

[alias]
lg_base = log --color=always -G --template "{if(tags, label('custom.tag','[{tags}] '))}{if(bookmarks, label('custom.bookmark','[{bookmarks}] '))}{label('changeset.{phase}',node|short)} {desc|firstline} {label('custom.time',date|age)} {label('custom.author',author|person)}"
#lgs = log -l 30 --color=always -G --template "{if(tags, label('custom.tag','[{tags}] '))}{if(bookmarks, label('custom.bookmark','[{bookmarks}] '))}{label('custom.rev',node|short)} {label('custom.time',date|age)} {label('custom.author',author|person)}"
# Compact log (removes empty lines): hg lg | grep '[^| ]' --color=never
lg = !$HG lg_base "$@" | less -FRXS
lgc = !$HG lg_base "$@" | grep '[^| ]' --color=never 2>/dev/null | less -FRXS
lgr = !$HG lg_base | grep '[^| ]' --color=never 2>/dev/null | less -FRXS -j.5 -p$1

blame = annotate --user --changeset --date -q

#works with -r, not -c use extdiff instead. ^^
#vimdiff = !$HG cat $@ | vim - -c ":vert diffsplit $1" -c "cnoreabbrev q :qa!"

# Show strip backups against the current repository using hg in. Any arguments are passed to hg in (so e.g. you can use -p to show full patches).
show-strip-backups = !HGPLAIN="true" ls -d -1 "$(hg root)/.hg/strip-backup/"* -t | xargs -I{} -n 1 sh -c 'hg in --color=always {} "$@" 2>&1 || true' | less -FRX
# HGPLAIN=true is set so that aliases etc don't ruin things, the command is run in sh with `|| true` so that failed attempts to compare a backup file against the current repo don't kill the command.

backout-commit = !$HG backout -r "$1" && $HG commit -m "Backed out $1"

multi-backout = !$HG log -r "$1" -T "{node}\n" | xargs -n1 $HG backout-commit

[color]
custom.rev = red
custom.tag = yellow bold
custom.bookmark = yellow
custom.author = blue bold
custom.time = green

changeset.public=red
changeset.secret=blue
changeset.draft=green

[hooks]
pretxncommit.bad = check_commit.py

[revsetalias]

# Get the last branching commit (i.e. last commit with multiple descendents)
prev_branchpoint($1) = last(ancestors($1) and branchpoint())

# Get the commit after the last branch (i.e. what you rebase from if you do rebase -b $1).
base($1) = last(limit(reverse(last(prev_branchpoint($1)::$1)),2))
