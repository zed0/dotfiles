global !p
from os.path import relpath

project_base = '/home/zed0/'

def include_guard_name(file_path, snip):
	path_from_base = relpath(file_path, snip.opt('g:VimProjectBase', project_base))
	return re.sub('\W', '_', path_from_base).upper() + '_INCLUDED'

endglobal

snippet `guard "Header guard"
#ifndef `!p snip.rv=include_guard_name(path, snip)`
#define `!p snip.rv=include_guard_name(path, snip)`

$0

#endif // `!p snip.rv=include_guard_name(path, snip)`
endsnippet

snippet "`n(ame)?s(pace)?" "Namespace" r
namespace $1
{
	$0
} // namespace $1
endsnippet

snippet `debug "Debug line number and value" "snip.line+1" be
std::cout << "Line `!p
snip.rv = snip.context
`:\tValue of $1: " << $1 << std::endl;
endsnippet

snippet `line "Print line number" "snip.line+1" be
std::cout << "Line `!p
snip.rv = snip.context
`" << std::endl;
endsnippet

snippet `constructors "C++ constructors"
$1() = default;
$1($1&&) = default;
$1& operator=($1&&) = default;
$1(const $1&) = default;
$1& operator=(const $1&) = default;
~$1() = default;
endsnippet
